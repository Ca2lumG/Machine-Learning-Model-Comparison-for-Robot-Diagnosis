# -*- coding: utf-8 -*-
"""Data Preprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-26xLepFZqR_1aX4e3VqeKXDd3cytMSf
"""

# GOAL: Load the text such that we get classification (line 1), lines 2-15 (data) --> split into the 6 columns, 2 lines of space

#1. Load the text file

# columns = [sample number, interval number, fx, fy, fz, tx, ty, tz, class]
#mod operator: % ---> if x%15 == 0: that means x is divisible by 15 bc the mod operator gives back the remainder after division

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
path1 = "/content/drive/MyDrive/Hyunmin Yoo/Data/lp1.data.txt"
path2 = "/content/drive/MyDrive/Hyunmin Yoo/Data/lp2.data.txt"
path3 = "/content/drive/MyDrive/Hyunmin Yoo/Data/lp3.data.txt"
path4 = "/content/drive/MyDrive/Hyunmin Yoo/Data/lp4.data.txt"
path5 = "/content/drive/MyDrive/Hyunmin Yoo/Data/lp5.data.txt"
columns = ['sample number', 'interval number', 'fx', 'fy', 'fz', 'tx', 'ty', 'tz', 'class']
df1 = pd.DataFrame(columns=columns)
df2 = pd.DataFrame(columns=columns)
df3 = pd.DataFrame(columns=columns)
df4 = pd.DataFrame(columns=columns)
df5 = pd.DataFrame(columns=columns)

paths = [path1, path2, path3, path4, path5]
dfs = [df1, df2, df3, df4, df5]

filled_dfs = []

for i in range(5):
  df = dfs[i]
  path = paths[i]


  linecounter = 0
  samplecounter = 0
  samples = []
  with open(path, 'r') as f:
    for line in f:
      line = line.strip()
      if linecounter%18 == 0:
        #we've entered a sample
        label = line
        intervalcounter = 0
        samplecounter+=1

      if linecounter%18 != 0 and linecounter!=16 and linecounter!=17:
        sampledata = line.split("\t")
        if len(sampledata)==6:
          newrow = {'sample number':samplecounter, 'interval number':intervalcounter, 'fx':sampledata[0], 'fy':sampledata[1], 'fz':sampledata[2], 'tx':sampledata[3], 'ty':sampledata[4], 'tz':sampledata[5], 'class':label}
          newrow = pd.DataFrame([newrow])
        df=pd.concat([df, newrow], ignore_index=True)
      intervalcounter+=1
      linecounter+=1

  filled_dfs.append(df)

#2. Get class
df

#3. get data
for i in range(5):
  df = filled_dfs[i]
  newpath = f'/content/drive/MyDrive/Hyunmin Yoo/Data/lp{i+1}.csv'
  df.to_csv(newpath, index=False)

#4. put each sample into a table (pd dataframe)

lp1 = pd.read_csv('/content/drive/MyDrive/Hyunmin Yoo/Data/lp1.csv')
lp2 = pd.read_csv('/content/drive/MyDrive/Hyunmin Yoo/Data/lp2.csv')
lp3 = pd.read_csv('/content/drive/MyDrive/Hyunmin Yoo/Data/lp3.csv')
lp4 = pd.read_csv('/content/drive/MyDrive/Hyunmin Yoo/Data/lp4.csv')
lp5 = pd.read_csv('/content/drive/MyDrive/Hyunmin Yoo/Data/lp5.csv')

lp1.head()
lp2.head()
lp3.head()
lp4.head()
lp5.head()

grouped_lp1 = lp1.groupby("sample number")
#grouped_lp1.head(50)
print(grouped_lp1)

def flatten_sample(group):
    flattened = group.drop(columns=['class','interval number']).values.flatten()
    class_value = group['class'].iloc[0]
    return pd.Series(list(flattened) + [class_value])

# 'sample number', 'fx1', 'fy1', 'fz1', 'tx1', 'ty1', 'tz1','fx2', 'fy2', 'fz2', 'tx2', 'ty2', 'tz2', 'class']


#All of the columns
# 'sample number',
# 'fx1', 'fy1', 'fz1', 'tx1', 'ty1', 'tz1',
# 'fx2', 'fy2', 'fz2', 'tx2', 'ty2', 'tz2',
# 'fx3', 'fy3', 'fz3', 'tx3', 'ty3', 'tz3',
# 'fx4', 'fy4', 'fz4', 'tx4', 'ty4', 'tz4',
# 'fx5', 'fy5', 'fz5', 'tx5', 'ty5', 'tz5',
# 'fx6', 'fy6', 'fz6', 'tx6', 'ty6', 'tz6',
# 'fx7', 'fy7', 'fz7', 'tx7', 'ty7', 'tz7',
# 'fx8', 'fy8', 'fz8', 'tx8', 'ty8', 'tz8',
# 'fx9', 'fy9', 'fz9', 'tx9', 'ty9', 'tz9',
# 'fx10', 'fy10', 'fz10', 'tx10', 'ty10', 'tz10',
# 'fx11', 'fy11', 'fz11', 'tx11', 'ty11', 'tz11',
# 'fx12', 'fy12', 'fz12', 'tx12', 'ty12', 'tz12',
# 'fx13', 'fy13', 'fz13', 'tx13', 'ty13', 'tz13',
# 'fx14', 'fy14', 'fz14', 'tx14', 'ty14', 'tz14',
# 'fx15', 'fy15', 'fz15', 'tx15', 'ty15', 'tz15',
# 'class'

df= grouped_lp1.apply(flatten_sample)
print(df)

print(len(df)) #this should be 88

n_intervals = len(df[df['sample number'] == df['sample number'].iloc[0]])
columns = []
for i in range(1, n_intervals + 1):
    columns += [f'fx{i}', f'fy{i}', f'fz{i}', f'tx{i}', f'ty{i}', f'tz{i}']
columns += ['class']
result.columns = columns
result = result.reset_index()
print(result)
result.to_csv('/content/drive/MyDrive/Hyunmin Yoo/Data/flattenedlp1.csv')